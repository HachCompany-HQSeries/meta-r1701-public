#
# U-Boot script for installing Linux images created by Yocto from the micro SD
# card into the NAND
#

echo "############################################################"
echo "#           Linux firmware install from micro SD           #"
echo "############################################################"
echo ""
echo " This process will erase your NAND and will install a new"
echo " U-Boot and Linux firmware images on the NAND."
echo ""
echo " Press CTRL+C now if you wish to abort or wait 10 seconds"
echo " to continue."

sleep 10
if test $? -eq 1; then
	echo "Aborted by user.";
	exit;
fi

# Determine U-Boot file to program basing on module variant
if test -n "${module_variant}"; then
	if test "${module_variant}" = "0x02" || test "${module_variant}" = "0x03"; then
		setenv INSTALL_UBOOT_FILENAME u-boot-r1701.imx;
	elif test "${module_variant}" = "0x04"; then
		setenv INSTALL_UBOOT_FILENAME u-boot-r17011GB.imx;
	fi
fi
# Use 'test -n ...' because 'test -z ...' does not work well on old versions of
# u-boot when the checked value is empty.
if test -n "${INSTALL_UBOOT_FILENAME}"; then
	true;
else
	echo "";
	echo "[ERROR] Cannot determine U-Boot file for this module!";
	echo "";
	echo "1. Set variable 'INSTALL_UBOOT_FILENAME' depending on your ConnectCore 6UL variant:";
	echo "   - For a SOM with 1GB DDR3, run:";
	echo "     => setenv INSTALL_UBOOT_FILENAME u-boot-r17011GB.imx";
	echo "   - For a SOM with 256MB DDR3, run:";
	echo "     => setenv INSTALL_UBOOT_FILENAME u-boot-r1701.imx";
	echo "";
	echo "2. Run the install script again.";
	echo "";
	echo "Aborted";
	echo "";
	exit;
fi;

setenv INSTALL_MMCDEV 0
setenv INSTALL_LINUX_FILENAME hach-image-r1701.boot.ubifs
setenv INSTALL_RECOVERY_FILENAME hach-image-r1701.recovery.ubifs
setenv INSTALL_ROOTFS_FILENAME hach-image-r1701.ubifs

# Check for presence of firmware files on the SD card
for install_f in ${INSTALL_UBOOT_FILENAME} ${INSTALL_LINUX_FILENAME} ${INSTALL_RECOVERY_FILENAME} ${INSTALL_ROOTFS_FILENAME}; do
	if test ! -e mmc ${INSTALL_MMCDEV}:1 ${install_f}; then
		echo "ERROR: Could not find file ${install_f}";
		install_abort=1;
	fi;
done
if test -n "${install_abort}"; then
	echo "Aborted.";
	exit;
fi

# Skip user confirmation for U-Boot update
setenv forced_update 1

# Set bootdelay to zero so that firmware update is run immediately after
# the first reset.
setenv bootdelay 0

# Update U-Boot
echo ""
echo ""
echo ">> Installing U-Boot boot loader (target will reset)"
echo ""
echo ""
update uboot mmc ${INSTALL_MMCDEV} fat ${INSTALL_UBOOT_FILENAME}
if test $? -eq 1; then
	echo "[ERROR] Failed to update U-Boot boot loader!";
	echo "";
	echo "Aborted.";
	exit;
fi

# Set 'bootcmd' to the second part of the script that will
#  - Reset environment to defaults
#  - Save the environment
#  - Update the 'linux' partition
#  - Update the 'recovery' partition
#  - Update the 'rootfs' partition
#  - Configure recovery to wipe 'update' partition
#  - Run 'recovery' and let the system boot after
setenv bootcmd "
	env default -a;
	saveenv;
	echo \"\";
	echo \"\";
	echo \">> Installing Linux kernel and device tree files\";
	echo \"\";
	echo \"\";
	nand erase.part linux;
	update linux mmc ${INSTALL_MMCDEV} fat ${INSTALL_LINUX_FILENAME};
	if test \$? -eq 1; then
		echo \"[ERROR] Failed to update linux partition!\";
		echo \"\";
		echo \"Aborted.\";
		exit;
	fi;
	echo \"\";
	echo \"\";
	echo \">> Installing recovery\";
	echo \"\";
	echo \"\";
	nand erase.part recovery;
	update recovery mmc ${INSTALL_MMCDEV} fat ${INSTALL_RECOVERY_FILENAME};
	if test \$? -eq 1; then
		echo \"[ERROR] Failed to update recovery partition!\";
		echo \"\";
		echo \"Aborted.\";
		exit;
	fi;
	echo \"\";
	echo \"\";
	echo \">> Installing Linux root file system\";
	echo \"\";
	echo \"\";
	nand erase.part rootfs;
	update rootfs mmc ${INSTALL_MMCDEV} fat ${INSTALL_ROOTFS_FILENAME};
	if test \$? -eq 1; then
		echo \"[ERROR] Failed to update rootfs partition!\";
		echo \"\";
		echo \"Aborted.\";
		exit;
	fi;
	echo \"\";
	setenv boot_recovery yes;
	setenv recovery_command wipe_update;
	saveenv;
	echo \"\";
	echo \"\";
	echo \">> Firmware installation complete. Rebooting into recovery mode for final deployment.\";
	echo \"\";
	echo \"\";
	sleep 1;
	reset;
"

saveenv
reset
