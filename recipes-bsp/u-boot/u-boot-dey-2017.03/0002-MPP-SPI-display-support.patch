diff --git a/arch/arm/dts/imx6ul-r1701.dts b/arch/arm/dts/imx6ul-r1701.dts
index e3a939dcdb..5890c7f664 100644
--- a/arch/arm/dts/imx6ul-r1701.dts
+++ b/arch/arm/dts/imx6ul-r1701.dts
@@ -19,6 +19,25 @@
 	model = "HACH r1701 handheld meter.";
 	compatible = "digi,ccimx6ulstarter", "digi,ccimx6ul", "fsl,imx6ul";
 	digi,machine,name = "r1701";
+
+    // V5P0_EN Power regulator - enabled at boot time for MIP display support as well probe, audio etc.
+    reg_V5P0_EN: regulator-V5P0_EN {
+        compatible = "regulator-fixed";
+        regulator-name = "V5P0_EN";
+        regulator-min-microvolt = <3300000>;
+        regulator-max-microvolt = <3300000>;
+        pinctrl-names = "default";
+        pinctrl-0 = <&pinctrl_V5P0_EN_power>;
+        gpio = <&gpio5 6 GPIO_ACTIVE_HIGH>;
+        enable-active-high;
+        regulator-boot-on;
+        regulator-always-on;
+
+        // When power off key is pressed, system will enter in to suspend mode and we do not want this 5V power on.
+        regulator-state-mem {
+            regulator-off-in-suspend;
+        };
+    };
 };
 
 /* UART5 (Console) */
@@ -121,12 +140,61 @@
 	status = "disabled";
 };
 
+// PMIC - LDO4 --> LDO regulator, 1.8 VDC, Powers the Voltage shifter chips for LCD display, TP14
+// DO NOT CHANGE MIN AND MAX VOLTAGE FOR THIS LDO. THIS LDO MUST PROVIDE ONLY 1.8VDC. This voltage is given to color
+// LCD and if it is more than 1.8VDC then it will damange LCD.
+&ldo4_ext {
+    regulator-min-microvolt = <1800000>;
+    regulator-max-microvolt = <1800000>;
+    regulator-state-mem {
+        regulator-off-in-suspend;
+    };
+};
+
+// SPI port for MIP display
+&ecspi1 {
+    fsl,spi-num-chipselects = <1>;
+    cs-gpios = <&gpio1 3 GPIO_ACTIVE_HIGH>;
+    pinctrl-names = "default";
+    pinctrl-0 = <&pinctrl_ecspi1_master>;
+    status      = "okay";
+
+    // 3.2" Portrait MIP Display
+    mipDisplay: ecspi@0{
+        compatible        = "sharp,ls032b7dd02";
+        reg               = <0>;
+        spi-max-frequency = <2000000>;
+        spi-cs-high;
+        gpios             = <&gpio5 1 GPIO_ACTIVE_HIGH>,  // SER_LCD_ON_OFF
+                            <&gpio5 8 GPIO_ACTIVE_HIGH>;  // SER_LCD_EXTCOM
+        status = "okay";
+    };
+};
+
 /* Pin mux configuration */
 &iomuxc {
 	pinctrl-names = "default";
 	pinctrl-0 = <&pinctrl_hog>;
 
 	imx6ul-ccimx6ul {
+
+        // Enable 5 VDC to system from VDC RAW power, Active High Signal
+        pinctrl_V5P0_EN_power: V5P0_EN_power {
+            fsl,pins = <
+                MX6UL_PAD_SNVS_TAMPER6__GPIO5_IO06      0x10b0
+            >;
+        };
+
+        // SPI 1 - MIP display
+        pinctrl_ecspi1_master: ecspi1grp1 {
+            fsl,pins = <
+                MX6UL_PAD_LCD_DATA22__ECSPI1_MOSI       0x10b0
+                MX6UL_PAD_LCD_DATA23__ECSPI1_MISO       0x10b0
+                MX6UL_PAD_CSI_DATA04__ECSPI1_SCLK       0x10b0
+                MX6UL_PAD_GPIO1_IO03__GPIO1_IO03        0x30b0
+            >;
+        };
+
 		// Console
 		pinctrl_uart5: uart5grp {
 			fsl,pins = <
@@ -167,6 +235,17 @@
 		pinctrl_hog: hoggrp {
 			fsl,pins = <
 				MX6UL_PAD_LCD_DATA16__GPIO3_IO21        0x10b0  // SPARE_W10_TP1
+
+                // MIP Display, Active high signals
+                MX6UL_PAD_SNVS_TAMPER8__GPIO5_IO08      0x3031  // SER_LCD_EXTCOM
+                MX6UL_PAD_SNVS_TAMPER1__GPIO5_IO01      0x3031  // SER_LCD_ON_OFF
+                MX6UL_PAD_SNVS_TAMPER5__GPIO5_IO05      0x3031  // SER_LCD_BKLT_EN
+
+                // LCD Module
+                MX6UL_PAD_LCD_RESET__GPIO3_IO04         0x10b0  // LCD_RESET&
+                MX6UL_PAD_SNVS_TAMPER9__GPIO5_IO09      0x10b0  // LCD2_STANDBY&
+                MX6UL_PAD_SNVS_TAMPER0__GPIO5_IO00      0x10b0  // LCD2_PWR_EN&
+
 			>;
 		};
 	};
diff --git a/board/digi/r1701/Kconfig b/board/digi/r1701/Kconfig
index 78238e43e1..dc4e4b5885 100644
--- a/board/digi/r1701/Kconfig
+++ b/board/digi/r1701/Kconfig
@@ -16,4 +16,12 @@ config SYS_SOC
 config SYS_CONFIG_NAME
 	default "r1701"
 
+config VIDEO
+    bool
+    default n
+
+config VIDEO_R1701
+    bool "R1701 video driver"
+    default y
+
 endif
diff --git a/board/digi/r1701/r1701.c b/board/digi/r1701/r1701.c
index 1f51b5f52f..d6edc92017 100644
--- a/board/digi/r1701/r1701.c
+++ b/board/digi/r1701/r1701.c
@@ -27,6 +27,7 @@
 #include <netdev.h>
 #include <usb.h>
 #include <usb/ehci-ci.h>
+#include <spi.h>
 #include <command.h>
 #include "../ccimx6ul/ccimx6ul.h"
 #include "../common/carrier_board.h"
@@ -35,6 +36,7 @@
 #include "../common/mca_registers.h"
 #include "../common/mca.h"
 #include "../common/trustfence.h"
+#include "spi_hach_logo.h"
 
 #ifdef CONFIG_POWER
 #include <power/pmic.h>
@@ -54,6 +56,10 @@ DECLARE_GLOBAL_DATA_PTR;
 unsigned int board_version = CARRIERBOARD_VERSION_UNDEFINED;
 unsigned int board_id = CARRIERBOARD_ID_UNDEFINED;
 
+int r1701_mpp_on_off,
+    r1701_mpp_bklt;
+struct spi_slave *r1701_mpp_dev;
+
 // We do not use I2C multi bus and spare console gpio lines.
 #undef CONFIG_I2C_MULTI_BUS
 #undef CONFIG_CONSOLE_ENABLE_GPIO
@@ -403,6 +409,97 @@ int power_init_board(void)
 }
 #endif
 
+#ifdef CONFIG_VIDEO_R1701
+static iomux_v3_cfg_t const mpp_pads[] = {
+	MX6_PAD_SNVS_TAMPER6__GPIO5_IO06 | MUX_PAD_CTRL(NO_PAD_CTRL),  // V5P0_EN
+	MX6_PAD_SNVS_TAMPER1__GPIO5_IO01 | MUX_PAD_CTRL(NO_PAD_CTRL),  // LCD_ON_OFF
+	MX6_PAD_SNVS_TAMPER5__GPIO5_IO05 | MUX_PAD_CTRL(NO_PAD_CTRL),  // LCD_BKLT_EN
+	MX6_PAD_SNVS_TAMPER8__GPIO5_IO08 | MUX_PAD_CTRL(NO_PAD_CTRL),  // LCD_EXTCOM
+	MX6_PAD_LCD_DATA22__ECSPI1_MOSI | MUX_PAD_CTRL(NO_PAD_CTRL),  // LCD_MOSI
+	MX6_PAD_CSI_DATA04__ECSPI1_SCLK | MUX_PAD_CTRL(NO_PAD_CTRL),  // LCD_SCLK
+	MX6_PAD_GPIO1_IO03__GPIO1_IO03 | MUX_PAD_CTRL(NO_PAD_CTRL),  // LCD_CS
+
+};
+
+// function called by mxc_spi driver to determine which GPIO pin is connected to CS
+int board_spi_cs_gpio(unsigned bus, unsigned cs){
+    int pin = IMX_GPIO_NR(1, 3);
+    if(gpio_request(pin, "LCD_CS")){
+        printf("ERROR requesting gpio pin %d\n", pin);
+        return -1;
+    }
+    return pin;
+}
+
+static __u16 reverse_u16(__u16 value){
+
+    /* No need to convert entire 16 bit, we only care for A0-A9 line address bits */
+    return (((value & 0b0000000000000001) ? 0b0000001000000000 : 0 ) | \
+            ((value & 0b0000000000000010) ? 0b0000000100000000 : 0 ) | \
+            ((value & 0b0000000000000100) ? 0b0000000010000000 : 0 ) | \
+            ((value & 0b0000000000001000) ? 0b0000000001000000 : 0 ) | \
+            ((value & 0b0000000000010000) ? 0b0000000000100000 : 0 ) | \
+            ((value & 0b0000000000100000) ? 0b0000000000010000 : 0 ) | \
+            ((value & 0b0000000001000000) ? 0b0000000000001000 : 0 ) | \
+            ((value & 0b0000000010000000) ? 0b0000000000000100 : 0 ) | \
+            ((value & 0b0000000100000000) ? 0b0000000000000010 : 0 ) | \
+            ((value & 0b0000001000000000) ? 0b0000000000000001 : 0 ));
+}
+
+int setup_mpp_display(){
+    imx_iomux_v3_setup_multiple_pads(mpp_pads,
+            ARRAY_SIZE(mpp_pads));
+
+    // turn on backlight:
+    int v5_enable = IMX_GPIO_NR(5, 6);
+
+    if(gpio_request(v5_enable, "V5P0")){
+        printf("ERROR requesting gpio pin %d\n", v5_enable);
+        return 1;
+    }
+    gpio_direction_output(v5_enable, 1);
+
+    r1701_mpp_bklt = IMX_GPIO_NR(5, 5);
+
+    if(gpio_request(r1701_mpp_bklt, "LCD_BKLT_EN")){
+        printf("ERROR requesting gpio pin %d\n", r1701_mpp_bklt);
+        return 1;
+    }
+    gpio_direction_output(r1701_mpp_bklt, 1);
+
+    int extcom = IMX_GPIO_NR(5, 8);
+    if(gpio_request(extcom, "LCD_EXTCOM")){
+        printf("ERROR requesting gpio pin %d\n", extcom);
+        return 1;
+    }
+    gpio_direction_output(extcom, 1);
+
+    r1701_mpp_on_off = IMX_GPIO_NR(5, 1);
+    if(gpio_request(r1701_mpp_on_off, "LCD_ON_OFF")){
+        printf("ERROR requesting gpio pin %d\n", r1701_mpp_on_off);
+        return 1;
+    }
+    gpio_direction_output(r1701_mpp_on_off, 0);
+
+    r1701_mpp_dev = spi_setup_slave(0, 0, 2000000, SPI_MODE_0 | SPI_CS_HIGH);
+
+    spi_claim_bus(r1701_mpp_dev);
+    
+    udelay(120000);
+
+    spi_xfer(r1701_mpp_dev, 8*sizeof(HachLogoMPP_SPI_buf), HachLogoMPP_SPI_buf, HachLogoMPP_SPI_buf, SPI_XFER_ONCE);
+
+    gpio_set_value(r1701_mpp_on_off, 1);
+
+    return 0;
+}
+
+int setup_hpp_display(){
+    //TODO
+    return 0;
+}
+#endif
+
 int board_init(void)
 {
 	/* SOM init */
@@ -427,6 +524,13 @@ int board_init(void)
 	setup_usb();
 #endif
 
+#ifdef CONFIG_VIDEO_R1701
+    if(strcmp(getenv("model-name"), "HQ_HPP"))
+        setup_mpp_display();
+    else
+        setup_hpp_display();
+#endif
+
 	return 0;
 }
 
diff --git a/cmd/Makefile b/cmd/Makefile
index d13c80b123..6e328a531e 100644
--- a/cmd/Makefile
+++ b/cmd/Makefile
@@ -12,6 +12,10 @@ obj-$(CONFIG_CMD_BOOTM) += bootm.o
 obj-y += help.o
 obj-y += version.o
 
+
+
+obj-$(CONFIG_VIDEO_R1701) += r1701.o
+
 # command
 obj-$(CONFIG_CMD_AES) += aes.o
 obj-$(CONFIG_CMD_AMBAPP) += ambapp.o
diff --git a/configs/r1701_defconfig b/configs/r1701_defconfig
index 95da29f920..63ba777e56 100644
--- a/configs/r1701_defconfig
+++ b/configs/r1701_defconfig
@@ -1,6 +1,5 @@
 CONFIG_ARM=y
 CONFIG_ARCH_MX6=y
-# CONFIG_SECURE_BOOT is not set
 CONFIG_MODULE_FUSE=y
 CONFIG_TARGET_R1701=y
 CONFIG_DEFAULT_DEVICE_TREE="imx6ul-r1701"
@@ -24,7 +23,8 @@ CONFIG_CMD_UBI=y
 # CONFIG_ISO_PARTITION is not set
 CONFIG_PARTITION_TYPE_GUID=y
 CONFIG_OF_CONTROL=y
+CONFIG_RNG_SW_TEST=y
 CONFIG_DM_GPIO=y
 CONFIG_PHYLIB=y
 CONFIG_IMX_THERMAL=y
-CONFIG_RNG_SW_TEST=y
+CONFIG_DM_VIDEO=y
diff --git a/include/configs/r1701.h b/include/configs/r1701.h
index a062a0a419..f970974a99 100644
--- a/include/configs/r1701.h
+++ b/include/configs/r1701.h
@@ -285,4 +285,6 @@
 #define CONFIG_LZO
 #define CONFIG_DIGI_UBI
 
+#define CONFIG_MXC_SPI
+
 #endif /* R1701_CONFIG_H */
