From cf3b312edb3e67226ba91da306d6db73f13096a0 Mon Sep 17 00:00:00 2001
From: Devang Patel <dpatel@hach.com>
Date: Wed, 18 Apr 2018 13:38:01 -0600
Subject: [PATCH 2/3] Adding rev 2 board support

---
 board/digi/r1701/r1701.c | 63 +++++++++++++++++++++++-------------------------
 include/configs/r1701.h  |  5 ++++
 2 files changed, 35 insertions(+), 33 deletions(-)

diff --git a/board/digi/r1701/r1701.c b/board/digi/r1701/r1701.c
index 3d58ea2856..bfd4481b3e 100644
--- a/board/digi/r1701/r1701.c
+++ b/board/digi/r1701/r1701.c
@@ -109,6 +109,9 @@ static iomux_v3_cfg_t const usdhc2_pads[] = {
 	MX6_PAD_CSI_DATA01__USDHC2_DATA1 | MUX_PAD_CTRL(USDHC_PAD_CTRL),
 	MX6_PAD_CSI_DATA02__USDHC2_DATA2 | MUX_PAD_CTRL(USDHC_PAD_CTRL),
 	MX6_PAD_CSI_DATA03__USDHC2_DATA3 | MUX_PAD_CTRL(USDHC_PAD_CTRL),
+
+	/* Add SD Card power control pin Port-5 Pin-1 */
+    MX6_PAD_SNVS_TAMPER1__GPIO5_IO01 | MUX_PAD_CTRL(GPI_PAD_CTRL),
 };

 #ifdef CONFIG_SYS_I2C_MXC
@@ -145,10 +148,10 @@ static iomux_v3_cfg_t const fec1_pads[] = {
 	MX6_PAD_ENET1_RX_ER__ENET1_RX_ER | MUX_PAD_CTRL(ENET_PAD_CTRL),
 	MX6_PAD_ENET1_RX_EN__ENET1_RX_EN | MUX_PAD_CTRL(ENET_PAD_CTRL),
 	/*
-	 * GPIO3_IO2 is used as PHY reset in Starter Board v1 and as PHY power
+	 * GPIO5_IO2 is used as PHY reset in Starter Board v1 and as PHY power
 	 * enable on Starter Board v2
 	 */
-	MX6_PAD_LCD_HSYNC__GPIO3_IO02 | MUX_PAD_CTRL(NO_PAD_CTRL),
+    MX6_PAD_SNVS_TAMPER2__GPIO5_IO02 | MUX_PAD_CTRL(GPI_PAD_CTRL),
 };

 static void setup_iomux_fec(void)
@@ -196,7 +199,7 @@ int board_mmc_getcd(struct mmc *mmc)

 int board_mmc_init(bd_t *bis)
 {
-	int i, ret;
+    int i, ret;

 	/*
 	 * According to the board_mmc_init() the following map is done:
@@ -206,8 +209,11 @@ int board_mmc_init(bd_t *bis)
 	for (i = 0; i < CONFIG_SYS_FSL_USDHC_NUM; i++) {
 		switch (i) {
 		case 0:
-			imx_iomux_v3_setup_multiple_pads(
-				usdhc2_pads, ARRAY_SIZE(usdhc2_pads));
+			imx_iomux_v3_setup_multiple_pads(usdhc2_pads, ARRAY_SIZE(usdhc2_pads));
+
+            /* Enable SD Card power - Active low signal */
+            gpio_direction_output(IMX_GPIO_NR(5, 1) , 0);
+
 			usdhc_cfg[0].sdhc_clk = mxc_get_clock(MXC_ESDHC2_CLK);
 			break;
 		default:
@@ -235,26 +241,18 @@ void reset_phy()
 	 * reached 80% of the operating voltage. At this point of the code
 	 * we can assume the second premise is already accomplished.
 	 */
-	if (board_version == 1) {
-		int phy_reset_gpio = IMX_GPIO_NR(3, 2);
-
-		/* Assert PHY reset (low) */
-		gpio_direction_output(phy_reset_gpio , 0);
-		udelay(100);
-		/* Deassert PHY reset (high) */
-		gpio_set_value(phy_reset_gpio, 1);
-	} else {
-		/* MCA_IO7 is connected to PHY reset */
-		int reset = (1 << 7);
-
-		/* Configure as output */
-		mca_update_bits(MCA_CC6UL_GPIO_DIR_0, reset, reset);
-		/* Assert PHY reset (low) */
-		mca_update_bits(MCA_CC6UL_GPIO_DATA_0, reset, 0);
-		udelay(100);
-		/* Deassert PHY reset (high) */
-		mca_update_bits(MCA_CC6UL_GPIO_DATA_0, reset, reset);
-	}
+    /* MCA_IO7 is connected to PHY reset */
+    int reset = (1 << 7);
+
+    /* Configure as output */
+    mca_update_bits(MCA_CC6UL_GPIO_DIR_0, reset, reset);
+
+    /* Assert PHY reset (low) */
+    mca_update_bits(MCA_CC6UL_GPIO_DATA_0, reset, 0);
+    udelay(100);
+
+    /* Deassert PHY reset (high) */
+    mca_update_bits(MCA_CC6UL_GPIO_DATA_0, reset, reset);
 }

 int board_eth_init(bd_t *bis)
@@ -263,6 +261,10 @@ int board_eth_init(bd_t *bis)

 	setup_iomux_fec();

+    /* Turn on power to ethernet module */
+    gpio_direction_output(IMX_GPIO_NR(5, 2) , 0);
+    udelay(100);
+
 	ret = fecmxc_initialize_multi(bis, CONFIG_FEC_ENET_DEV,
 		CONFIG_FEC_MXC_PHYADDR, IMX_FEC_BASE);
 	if (ret)
@@ -279,12 +281,8 @@ static int setup_fec(int fec_id)
 		= (struct iomuxc_gpr_base_regs *) IOMUXC_GPR_BASE_ADDR;
 	int ret;

-	if (board_version != 1) {
-		/* Enable PHY power */
-		int phy_power_gpio = IMX_GPIO_NR(3, 2);
-
-		gpio_direction_output(phy_power_gpio , 1);
-	}
+	/* Enable PHY power */
+    gpio_direction_output(IMX_GPIO_NR(5, 2) , 0);

 	if (0 == fec_id) {
 		if (check_module_fused(MX6_MODULE_ENET1))
@@ -313,8 +311,7 @@ static int setup_fec(int fec_id)

 int board_phy_config(struct phy_device *phydev)
 {
-
-	phy_write(phydev, MDIO_DEVAD_NONE, 0x1f, 0x8190);
+	phy_write(phydev, MDIO_DEVAD_NONE, 0x1f, 0x8190);

 	if (phydev->drv->config)
 		phydev->drv->config(phydev);
diff --git a/include/configs/r1701.h b/include/configs/r1701.h
index 8a8727408c..53041690f5 100644
--- a/include/configs/r1701.h
+++ b/include/configs/r1701.h
@@ -22,6 +22,11 @@
 /* uncomment for BEE support, needs to enable CONFIG_CMD_FUSE */
 /* #define CONFIG_CMD_BEE */

+/* Define PHY Chip. We have a different PHY chip from Micrel (KSZ8081RNB) compared to Digi's Microchip LAN8720 */
+#if defined(CONFIG_PHY_SMSC)
+#undef CONFIG_PHY_SMSC
+#define CONFIG_PHY_MICREL
+
 /* FLASH and environment organization */
 #define CONFIG_SYS_BOOT_NAND
 #define CONFIG_SYS_NO_FLASH
--
2.11.0

