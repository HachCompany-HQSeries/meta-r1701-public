From eca76f298282dfffd4a0b08bcad6982ac4f18895 Mon Sep 17 00:00:00 2001
From: Devang Patel <dpatel@hach.com>
Date: Thu, 18 Jan 2018 10:21:24 -0700
Subject: [PATCH 09/10] Added support for matrix keypad and enabled 3.2 inch
 display instead of 2.7 inch.

---
 arch/arm/boot/dts/imx6ul-r1701-wb.dts | 284 ++++++++++++++++------------------
 arch/arm/boot/dts/imx6ul-r1701.dts    | 238 +++++++++++++---------------
 2 files changed, 245 insertions(+), 277 deletions(-)

diff --git a/arch/arm/boot/dts/imx6ul-r1701-wb.dts b/arch/arm/boot/dts/imx6ul-r1701-wb.dts
index 052f10b..c1187a7 100644
--- a/arch/arm/boot/dts/imx6ul-r1701-wb.dts
+++ b/arch/arm/boot/dts/imx6ul-r1701-wb.dts
@@ -19,117 +19,72 @@
 /* ConnectCore 6UL StarterBoard */
 #include "imx6ul-ccimx6ulstarter.dtsi"
 
-#if 0
-
-/*
- * Uncomment to enable the i.MX6UL SoC ADCs.
- * Include in adc-ch-list the ADC channels (from 0 to 9) that you want to
- * enable. Note that the iomux has to be configured accordingly in pinctrl_adc1
- * to configure the pad for ADC operation
- */
-//&adc1 {
-//	pinctrl-names = "default";
-//	pinctrl-0 = <&pinctrl_adc1>;
-//	adc-ch-list = <4>;
-//	status = "okay";
-//};
-
-&caam_keyblob {
-	status = "okay";
+/ {
+	model = "HACH r1701";
+	compatible = "digi,ccimx6ulstarter", "digi,ccimx6ul", "fsl,imx6ul";
+	digi,machine,name = "ccimx6ulstarter";
+	
+	/* Set boot console output with a stdout-path property */
+	chosen {
+		/* serial4 = &uart5 for starter board hardware */
+		stdout-path = "serial4:115200n8";
+	};
+	
+	/* Gpio based matrix Keyboard */
+	matrix_keypad: matrix-keypad@0 {
+		compatible = "gpio-matrix-keypad";
+		col-gpios = <
+		&gpio1 10 GPIO_ACTIVE_LOW
+		&gpio1 11 GPIO_ACTIVE_LOW
+		>;
+		row-gpios = <
+		&gpio1 12 GPIO_ACTIVE_HIGH
+		&gpio1 13 GPIO_ACTIVE_HIGH
+		&gpio1 14 GPIO_ACTIVE_HIGH
+		&gpio1 15 GPIO_ACTIVE_HIGH
+		>;
+		
+		/* Actual MATRIX keys MAP formation based on ROWS and COLUMNS on NXL keypad hardware
+		 * 		COL_0		COL_1
+		 * --------------||--------------||--------
+		 * 		 ||
+		 * ROW_0 ----- Left Softkey --- Info Key --
+		 * 		 ||		 ||
+		 * ROW_1 ----- UP Key --------- Left Key --
+		 * 		 ||		 ||
+		 * ROW_2 ----- Right key ------ Down key --
+		 * 		 ||		 ||
+		 * ROW_3 ----- Right Softkey -- Menu Key --
+		 * 		 ||		 ||
+		 * --------------||--------------||--------
+		 *
+		 * key assignment MACRO definition - MATRIX_KEY(row, col, code)
+		 */
+		linux,keymap = <
+		MATRIX_KEY(0, 0, KEY_LEFTCTRL)
+		MATRIX_KEY(0, 1, KEY_INFO)
+		MATRIX_KEY(1, 0, KEY_UP)
+		MATRIX_KEY(1, 1, KEY_LEFT)
+		MATRIX_KEY(2, 0, KEY_RIGHT)
+		MATRIX_KEY(2, 1, KEY_DOWN)
+		MATRIX_KEY(3, 0, KEY_RIGHTCTRL)
+		MATRIX_KEY(3, 1, KEY_MENU)
+		>;
+		
+		/* Debounce time and column scan time can be adjusted based on our need. These values are the defaults
+		 * to start with.
+		 */
+		debounce-delay-ms = <100>;
+		col-scan-delay-us = <50000>;
+	};
 };
 
-/* ECSPI3 (as master - Raspberry PI Expansion header) */
-// &ecspi3 {
-// 	/*
-// 	 * There are no SPI slave devices on the SBC.
-// 	 * Enable if adding your slave devices below.
-// 	 */
-// 	status = "okay";
-//
-// 	/*
-// 	 * Add your slave devices here. Next is an example of spidev.
-// 	 * Expect a harmless kernel warning if you enable spidev as slave.
-// 	 */
-// 	spidev@0 {
-// 		reg = <0>;
-// 		compatible = "spidev";
-// 		spi-max-frequency = <1000000>;
-// 	};
-// };
-
-/* ECSPI3 (as slave - Raspberry PI Expansion header) */
-// &ecspi3 {
-// 	pinctrl-0 = <&pinctrl_ecspi3_slave>;
-// 	spi-slave;
-// 	status = "okay";
-//
-// 	/*
-// 	 * Unique slave node. Property 'compatible' must be set to the
-// 	 * slave driver that will be registered by default.
-// 	 */
-// 	slave@0 {
-// 		reg = <0>;	/* must match the used CS line */
-// 		compatible = "spidev";
-// 		spi-max-frequency = <1000000>;
-// 	};
-// };
-
+/* Ethernet */
 &fec1 {
 	status = "okay";
 };
 
-/* CAN1 (Raspberry PI Expansion header) */
-&flexcan1 {
-	status = "okay";
-};
-
-/* I2C2 (Raspberry PI Expansion header and Grove connector) */
-&i2c2 {
-	status = "okay";
-};
-
-/* MCA IO0 connected to Grove ADC connector */
-&mca_adc {
-	digi,adc-ch-list = <0>;
-	digi,adc-vref = <3000000>;
-};
-
-/* Uncomment to Enable Tamper detection. There are 2 digital (0 and 1) and 2
- * analog (2 and 3) tamper interfaces.
- */
-//&mca_tamper {
-//	digi,tamper-if-list = <0 1 2 3>;
-//};
-
-/* PWM1 (Raspberry PI Expansion header) */
-&pwm1 {
-	status = "okay";
-};
-
-/* UART4 (Raspberry PI Expansion header) */
-&uart4 {
-	status = "okay";
-};
-
-&usbotg2 {
-	status = "okay";
-};
-/* Pin mux configuration */
-&iomuxc {
-	imx6ul-ccimx6ul {
-		/* Uncomment specific pins of the ADC channels enabled in 'adc-ch-list' */
-		//pinctrl_adc1: adc1grp {
-		//	fsl,pins = <
-		//		/* GPIO1_4/ADC1_IN4 (pin 7 of the expansion header) */
-		//		MX6UL_PAD_GPIO1_IO04__GPIO1_IO04        0xb0
-		//	>;
-		//};
-	};
-};
-#else
-&fec1 {
-	status = "okay";
-};
+/* USB Client */
 &usbotg1 {
 	dr_mode = "peripheral";
 	status = "okay";
@@ -145,55 +100,84 @@
 	status = "okay";
 };
 
+/* MIP Display */
 &ecspi3 {
 
-    cs-gpios    = <&gpio1 20 GPIO_ACTIVE_HIGH>;
-    pinctrl-0   = <&pinctrl_ecspi3_master>;
-    status      = "okay";
-
-    /* 2.7" Landscape MIP Display */
-    mipDisplay: ecspi@0{
-        compatible          = "sharp,ls027b7dh01";
-        reg                 = <0>;
-        spi-max-frequency   = <2000000>;
-        spi-cs-high;
-        gpios               = <&gpio3 4  GPIO_ACTIVE_HIGH>,  /* DISP PIN     */
-                              <&gpio3 10 GPIO_ACTIVE_HIGH>;  /* EXTCOMIN PIN */
-        status = "okay";
-    };
-
-    /* 3.2" Portrait MIP Display */
-    /*
-    mipDisplay: ecspi@0{
-        compatible 		= "sharp,ls032b7dd02";
-        reg                 = <0>;
-        spi-max-frequency   = <2000000>;
-        spi-cs-high;
-        gpios               = <&gpio3 4  GPIO_ACTIVE_HIGH>,  // DISP PIN
-                              <&gpio3 10 GPIO_ACTIVE_HIGH>;  // EXTCOMIN PIN
-        status = "okay";
-    };
-    */
+	cs-gpios    = <&gpio1 20 GPIO_ACTIVE_HIGH>;
+	pinctrl-0   = <&pinctrl_ecspi3_master>;
+	status      = "okay";
+
+	/* 2.7" Landscape MIP Display */
+	/*
+	mipDisplay: ecspi@0{
+		compatible          = "sharp,ls027b7dh01";
+		reg                 = <0>;
+		spi-max-frequency   = <2000000>;
+		spi-cs-high;
+		gpios               = <&gpio3 4  GPIO_ACTIVE_HIGH>,  // DISP PIN
+				      <&gpio3 10 GPIO_ACTIVE_HIGH>;  // EXTCOMIN PIN
+		status = "okay";
+	};
+	*/
+
+	/* 3.2" Portrait MIP Display */
+	mipDisplay: ecspi@0{
+		compatible	    = "sharp,ls032b7dd02";
+		reg                 = <0>;
+		spi-max-frequency   = <2000000>;
+		spi-cs-high;
+		gpios               = <&gpio3 4  GPIO_ACTIVE_HIGH>,  // DISP PIN
+				      <&gpio3 10 GPIO_ACTIVE_HIGH>;  // EXTCOMIN PIN
+		status = "okay";
+	};
 };
 
 /* Pin mux configuration */
 &iomuxc {
-    imx6ul-ccimx6ul {
-        pinctrl_ecspi3_master: ecspi3grp1 {
-            fsl,pins = <
-                MX6UL_PAD_UART2_RX_DATA__ECSPI3_SCLK    0x10b0
-                MX6UL_PAD_UART2_CTS_B__ECSPI3_MOSI      0x10b0
-                MX6UL_PAD_UART2_RTS_B__ECSPI3_MISO      0x10b0
-                MX6UL_PAD_UART2_TX_DATA__GPIO1_IO20     0x30b0 /* Chip Select */
-            >;
-        };
-
-        pinctrl_additionalgpio: additionalgpios {
-            fsl,pins = <
-                MX6UL_PAD_LCD_RESET__GPIO3_IO04         0x3031
-                MX6UL_PAD_LCD_DATA05__GPIO3_IO10        0x3031
-            >;
-        };
-    };
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_hog>;
+	
+	imx6ul-ccimx6ul {
+		pinctrl_ecspi3_master: ecspi3grp1 {
+			fsl,pins = <
+				MX6UL_PAD_UART2_RX_DATA__ECSPI3_SCLK    0x10b0
+				MX6UL_PAD_UART2_CTS_B__ECSPI3_MOSI      0x10b0
+				MX6UL_PAD_UART2_RTS_B__ECSPI3_MISO      0x10b0
+				MX6UL_PAD_UART2_TX_DATA__GPIO1_IO20     0x30b0
+			>;
+		};
+		
+		/* General purpose pinctrl */
+		pinctrl_hog: hoggrp {
+			fsl,pins = <
+				// MIP display control lines
+				MX6UL_PAD_LCD_RESET__GPIO3_IO04		0x3031
+				MX6UL_PAD_LCD_DATA05__GPIO3_IO10	0x3031
+				
+				// Expansion header pin 7 - ADC/GPIO1_4
+				//MX6UL_PAD_GPIO1_IO04__GPIO1_IO04	0x10b0
+				
+				// Expansion header pin 29 - GPIO1_5
+				//MX6UL_PAD_GPIO1_IO05__GPIO1_IO05	0x10b0
+				
+				// I2C_2 bus line used as GPIO on expansion header Pin 5
+				//MX6UL_PAD_GPIO1_IO00__GPIO1_IO00	0x10b0
+				
+				// I2C_2 bus line used as GPIO on expansion header Pin 3
+				//MX6UL_PAD_GPIO1_IO01__GPIO1_IO01	0x10b0
+				
+				/* Column (strobe) lines as outputs, 22k pull up, 100Mhz speed, fast slew rate */
+				/* NOTE: pull up must be removed for revision 1 board */
+				MX6UL_PAD_JTAG_MOD__GPIO1_IO10		0xf0b0
+				MX6UL_PAD_JTAG_TMS__GPIO1_IO11		0xf0b0
+				
+				/* Row lines as inputs, 100k pull down, 100Mhz speed, fast slew rate*/
+				/* NOTE: pull down must be removed for revision 1 board */
+				MX6UL_PAD_JTAG_TDO__GPIO1_IO12		0x30b0
+				MX6UL_PAD_JTAG_TDI__GPIO1_IO13		0x30b0
+				MX6UL_PAD_JTAG_TCK__GPIO1_IO14		0x30b0
+				MX6UL_PAD_JTAG_TRST_B__GPIO1_IO15	0x30b0
+			>;
+		};		
+	};
 };
-#endif
diff --git a/arch/arm/boot/dts/imx6ul-r1701.dts b/arch/arm/boot/dts/imx6ul-r1701.dts
index e038838..4ad630f 100644
--- a/arch/arm/boot/dts/imx6ul-r1701.dts
+++ b/arch/arm/boot/dts/imx6ul-r1701.dts
@@ -19,117 +19,72 @@
 /* ConnectCore 6UL StarterBoard */
 #include "imx6ul-ccimx6ulstarter.dtsi"
 
-#if 0
-
-/*
- * Uncomment to enable the i.MX6UL SoC ADCs.
- * Include in adc-ch-list the ADC channels (from 0 to 9) that you want to
- * enable. Note that the iomux has to be configured accordingly in pinctrl_adc1
- * to configure the pad for ADC operation
- */
-//&adc1 {
-//	pinctrl-names = "default";
-//	pinctrl-0 = <&pinctrl_adc1>;
-//	adc-ch-list = <4>;
-//	status = "okay";
-//};
+/ {
+	model = "HACH r1701";
+	compatible = "digi,ccimx6ulstarter", "digi,ccimx6ul", "fsl,imx6ul";
+	digi,machine,name = "ccimx6ulstarter";
+
+	/* Set boot console output with a stdout-path property */
+	chosen {
+		/* serial4 = &uart5 for starter board hardware */
+		stdout-path = "serial4:115200n8";
+	};
 
-&caam_keyblob {
-	status = "okay";
+	/* Gpio based matrix Keyboard */
+	matrix_keypad: matrix-keypad@0 {
+		compatible = "gpio-matrix-keypad";
+		col-gpios = <
+				&gpio1 10 GPIO_ACTIVE_LOW
+				&gpio1 11 GPIO_ACTIVE_LOW
+			    >;
+		row-gpios = <
+				&gpio1 12 GPIO_ACTIVE_HIGH
+				&gpio1 13 GPIO_ACTIVE_HIGH
+				&gpio1 14 GPIO_ACTIVE_HIGH
+				&gpio1 15 GPIO_ACTIVE_HIGH
+			    >;
+
+		/* Actual MATRIX keys MAP formation based on ROWS and COLUMNS on NXL keypad hardware
+		 * 		COL_0		COL_1
+		 * --------------||--------------||--------
+		 * 		 ||
+		 * ROW_0 ----- Left Softkey --- Info Key --
+		 * 		 ||		 ||
+		 * ROW_1 ----- UP Key --------- Left Key --
+		 * 		 ||		 ||
+		 * ROW_2 ----- Right key ------ Down key --
+		 * 		 ||		 ||
+		 * ROW_3 ----- Right Softkey -- Menu Key --
+		 * 		 ||		 ||
+		 * --------------||--------------||--------
+		 *
+		 * key assignment MACRO definition - MATRIX_KEY(row, col, code)
+		 */
+		linux,keymap = <
+				MATRIX_KEY(0, 0, KEY_LEFTCTRL)
+				MATRIX_KEY(0, 1, KEY_INFO)
+				MATRIX_KEY(1, 0, KEY_UP)
+				MATRIX_KEY(1, 1, KEY_LEFT)
+				MATRIX_KEY(2, 0, KEY_RIGHT)
+				MATRIX_KEY(2, 1, KEY_DOWN)
+				MATRIX_KEY(3, 0, KEY_RIGHTCTRL)
+				MATRIX_KEY(3, 1, KEY_MENU)
+			       >;
+
+		/* Debounce time and column scan time can be adjusted based on our need. These values are the defaults
+		 * to start with.
+		 */
+		debounce-delay-ms = <100>;
+		col-scan-delay-us = <50000>;
+	};
 };
 
-/* ECSPI3 (as master - Raspberry PI Expansion header) */
-// &ecspi3 {
-// 	/*
-// 	 * There are no SPI slave devices on the SBC.
-// 	 * Enable if adding your slave devices below.
-// 	 */
-// 	status = "okay";
-//
-// 	/*
-// 	 * Add your slave devices here. Next is an example of spidev.
-// 	 * Expect a harmless kernel warning if you enable spidev as slave.
-// 	 */
-// 	spidev@0 {
-// 		reg = <0>;
-// 		compatible = "spidev";
-// 		spi-max-frequency = <1000000>;
-// 	};
-// };
-
-/* ECSPI3 (as slave - Raspberry PI Expansion header) */
-// &ecspi3 {
-// 	pinctrl-0 = <&pinctrl_ecspi3_slave>;
-// 	spi-slave;
-// 	status = "okay";
-//
-// 	/*
-// 	 * Unique slave node. Property 'compatible' must be set to the
-// 	 * slave driver that will be registered by default.
-// 	 */
-// 	slave@0 {
-// 		reg = <0>;	/* must match the used CS line */
-// 		compatible = "spidev";
-// 		spi-max-frequency = <1000000>;
-// 	};
-// };
-
+/* Ethernet */
 &fec1 {
 	status = "okay";
 };
 
-/* CAN1 (Raspberry PI Expansion header) */
-&flexcan1 {
-	status = "okay";
-};
-
-/* I2C2 (Raspberry PI Expansion header and Grove connector) */
-&i2c2 {
-	status = "okay";
-};
-
-/* MCA IO0 connected to Grove ADC connector */
-&mca_adc {
-	digi,adc-ch-list = <0>;
-	digi,adc-vref = <3000000>;
-};
-
-/* Uncomment to Enable Tamper detection. There are 2 digital (0 and 1) and 2
- * analog (2 and 3) tamper interfaces.
- */
-//&mca_tamper {
-//	digi,tamper-if-list = <0 1 2 3>;
-//};
-
-/* PWM1 (Raspberry PI Expansion header) */
-&pwm1 {
-	status = "okay";
-};
-
-/* UART4 (Raspberry PI Expansion header) */
-&uart4 {
-	status = "okay";
-};
-
-&usbotg2 {
-	status = "okay";
-};
-/* Pin mux configuration */
-&iomuxc {
-	imx6ul-ccimx6ul {
-		/* Uncomment specific pins of the ADC channels enabled in 'adc-ch-list' */
-		//pinctrl_adc1: adc1grp {
-		//	fsl,pins = <
-		//		/* GPIO1_4/ADC1_IN4 (pin 7 of the expansion header) */
-		//		MX6UL_PAD_GPIO1_IO04__GPIO1_IO04        0xb0
-		//	>;
-		//};
-	};
-};
-#else
-&fec1 {
-	status = "okay";
-};
+/* USB Client */
 &usbotg1 {
 	dr_mode = "peripheral";
 	status = "okay";
@@ -145,6 +100,7 @@
 	status = "okay";
 };
 
+/* MIP Display */
 &ecspi3 {
 
     cs-gpios    = <&gpio1 20 GPIO_ACTIVE_HIGH>;
@@ -152,20 +108,21 @@
     status      = "okay";
 
     /* 2.7" Landscape MIP Display */
+    /*
     mipDisplay: ecspi@0{
         compatible          = "sharp,ls027b7dh01";
         reg                 = <0>;
         spi-max-frequency   = <2000000>;
         spi-cs-high;
-        gpios               = <&gpio3 4  GPIO_ACTIVE_HIGH>,  /* DISP PIN     */
-                              <&gpio3 10 GPIO_ACTIVE_HIGH>;  /* EXTCOMIN PIN */
+        gpios               = <&gpio3 4  GPIO_ACTIVE_HIGH>,  // DISP PIN
+                              <&gpio3 10 GPIO_ACTIVE_HIGH>;  // EXTCOMIN PIN
         status = "okay";
     };
+    */
 
     /* 3.2" Portrait MIP Display */
-    /*
     mipDisplay: ecspi@0{
-        compatible 		= "sharp,ls032b7dd02";
+        compatible	    = "sharp,ls032b7dd02";
         reg                 = <0>;
         spi-max-frequency   = <2000000>;
         spi-cs-high;
@@ -173,27 +130,54 @@
                               <&gpio3 10 GPIO_ACTIVE_HIGH>;  // EXTCOMIN PIN
         status = "okay";
     };
-    */
 };
 
 /* Pin mux configuration */
 &iomuxc {
-    imx6ul-ccimx6ul {
-        pinctrl_ecspi3_master: ecspi3grp1 {
-            fsl,pins = <
-                MX6UL_PAD_UART2_RX_DATA__ECSPI3_SCLK    0x10b0
-                MX6UL_PAD_UART2_CTS_B__ECSPI3_MOSI      0x10b0
-                MX6UL_PAD_UART2_RTS_B__ECSPI3_MISO      0x10b0
-                MX6UL_PAD_UART2_TX_DATA__GPIO1_IO20     0x30b0 /* Chip Select */
-            >;
-        };
-
-        pinctrl_additionalgpio: additionalgpios {
-            fsl,pins = <
-                MX6UL_PAD_LCD_RESET__GPIO3_IO04         0x3031
-                MX6UL_PAD_LCD_DATA05__GPIO3_IO10        0x3031
-            >;
-        };
-    };
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_hog>;
+	
+	imx6ul-ccimx6ul {
+		pinctrl_ecspi3_master: ecspi3grp1 {
+			fsl,pins = <
+				MX6UL_PAD_UART2_RX_DATA__ECSPI3_SCLK    0x10b0
+				MX6UL_PAD_UART2_CTS_B__ECSPI3_MOSI      0x10b0
+				MX6UL_PAD_UART2_RTS_B__ECSPI3_MISO      0x10b0
+				MX6UL_PAD_UART2_TX_DATA__GPIO1_IO20     0x30b0
+			>;
+		};
+		
+		/* General purpose pinctrl */
+		pinctrl_hog: hoggrp {
+			fsl,pins = <
+				// MIP display control lines
+				MX6UL_PAD_LCD_RESET__GPIO3_IO04		0x3031
+				MX6UL_PAD_LCD_DATA05__GPIO3_IO10	0x3031
+				
+				// Expansion header pin 7 - ADC/GPIO1_4
+				//MX6UL_PAD_GPIO1_IO04__GPIO1_IO04	0x10b0
+				
+				// Expansion header pin 29 - GPIO1_5
+				//MX6UL_PAD_GPIO1_IO05__GPIO1_IO05	0x10b0
+				
+				// I2C_2 bus line used as GPIO on expansion header Pin 5
+				//MX6UL_PAD_GPIO1_IO00__GPIO1_IO00	0x10b0
+				
+				// I2C_2 bus line used as GPIO on expansion header Pin 3
+				//MX6UL_PAD_GPIO1_IO01__GPIO1_IO01	0x10b0
+				
+				/* Column (strobe) lines as outputs, 22k pull up, 100Mhz speed, fast slew rate */
+				/* NOTE: pull up must be removed for revision 1 board */
+				MX6UL_PAD_JTAG_MOD__GPIO1_IO10		0xf0b0
+				MX6UL_PAD_JTAG_TMS__GPIO1_IO11		0xf0b0
+				
+				/* Row lines as inputs, 100k pull down, 100Mhz speed, fast slew rate*/
+				/* NOTE: pull down must be removed for revision 1 board */
+				MX6UL_PAD_JTAG_TDO__GPIO1_IO12		0x30b0
+				MX6UL_PAD_JTAG_TDI__GPIO1_IO13		0x30b0
+				MX6UL_PAD_JTAG_TCK__GPIO1_IO14		0x30b0
+				MX6UL_PAD_JTAG_TRST_B__GPIO1_IO15	0x30b0
+			>;
+		};		
+	};
 };
-#endif
-- 
2.7.4

